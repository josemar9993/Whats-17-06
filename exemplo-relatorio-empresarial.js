// exemplo-relatorio-empresarial.js
// Este arquivo demonstra como ficar√° o novo relat√≥rio empresarial

const { createDailySummary } = require('./src/summarizer');

// Dados de exemplo simulando mensagens reais de uma empresa
const mensagensExemplo = [
  {
    chatId: '5548999312271@c.us',
    senderName: 'Jo√£o Silva (Cliente Premium)',
    body: 'Bom dia! O sistema parou de funcionar aqui, √© urgente!',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 2.5 * 60 * 60 * 1000) / 1000), // 2.5h atr√°s
    contactName: 'Jo√£o Silva'
  },
  {
    chatId: '5548999312271@c.us',
    senderName: 'Jo√£o Silva (Cliente Premium)', 
    body: 'Pessoal, precisamos resolver isso hoje, temos cliente esperando',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 2 * 60 * 60 * 1000) / 1000), // 2h atr√°s
    contactName: 'Jo√£o Silva'
  },
  {
    chatId: '5548999312271@c.us',
    senderName: 'Jo√£o Silva (Cliente Premium)',
    body: 'Erro cr√≠tico na aplica√ß√£o, perdendo dinheiro a cada minuto',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 1.5 * 60 * 60 * 1000) / 1000), // 1.5h atr√°s
    contactName: 'Jo√£o Silva'
  },
  
  {
    chatId: '5548999312272@c.us',
    senderName: 'Maria Santos (Lead)',
    body: 'Oi! Gostaria de saber mais sobre os pre√ßos dos seus servi√ßos',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 3 * 60 * 60 * 1000) / 1000), // 3h atr√°s
    contactName: 'Maria Santos'
  },
  {
    chatId: '5548999312272@c.us',
    senderName: 'Bot',
    body: 'Ol√° Maria! Fico feliz com seu interesse. Vou te passar nossa tabela de pre√ßos.',
    fromMe: true,
    timestamp: Math.floor((Date.now() - 2.8 * 60 * 60 * 1000) / 1000), // 2.8h atr√°s
    contactName: 'Maria Santos'
  },
  {
    chatId: '5548999312272@c.us',
    senderName: 'Maria Santos (Lead)',
    body: 'Perfeito! Quando podemos marcar uma reuni√£o para fechar a proposta?',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 1.5 * 60 * 60 * 1000) / 1000), // 1.5h atr√°s
    contactName: 'Maria Santos'
  },
  
  {
    chatId: '5548999312273@c.us',
    senderName: 'Carlos Tech',
    body: 'Preciso de ajuda com a integra√ß√£o da API',
    fromMe: false, 
    timestamp: Math.floor((Date.now() - 4 * 60 * 60 * 1000) / 1000), // 4h atr√°s
    contactName: 'Carlos Tech'
  },
  {
    chatId: '5548999312273@c.us',
    senderName: 'Bot',
    body: 'Claro Carlos! Vou te ajudar com a integra√ß√£o. Qual erro espec√≠fico voc√™ est√° enfrentando?',
    fromMe: true,
    timestamp: Math.floor((Date.now() - 3.5 * 60 * 60 * 1000) / 1000), // 3.5h atr√°s
    contactName: 'Carlos Tech'
  },
  {
    chatId: '5548999312273@c.us',
    senderName: 'Carlos Tech',
    body: 'Obrigado! O problema √© no endpoint de pagamentos, retorna erro 500',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 3 * 60 * 60 * 1000) / 1000), // 3h atr√°s
    contactName: 'Carlos Tech'
  },
  
  {
    chatId: '5548999312274@c.us',
    senderName: 'Ana Startup',
    body: 'Boa tarde! Voc√™s fazem desenvolvimento de apps mobile?',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 1 * 60 * 60 * 1000) / 1000), // 1h atr√°s
    contactName: 'Ana Startup'
  },
  
  {
    chatId: '5548999312275@c.us',
    senderName: 'Pedro Investidor',
    body: 'Recebi a proposta por email, vamos agendar para amanh√£ √†s 14h?',
    fromMe: false,
    timestamp: Math.floor((Date.now() - 0.5 * 60 * 60 * 1000) / 1000), // 30min atr√°s
    contactName: 'Pedro Investidor'
  },
  {
    chatId: '5548999312275@c.us',
    senderName: 'Bot',
    body: 'Perfeito Pedro! Agendado para amanh√£ √†s 14h. Te envio o link da reuni√£o por aqui.',
    fromMe: true,
    timestamp: Math.floor((Date.now() - 0.3 * 60 * 60 * 1000) / 1000), // 18min atr√°s
    contactName: 'Pedro Investidor'
  }
];

async function exemploRelatorio() {
  console.log('üöÄ Gerando exemplo de Relat√≥rio Empresarial...\n');
  
  try {
    const relatorio = await createDailySummary(mensagensExemplo, 'HOJE (01/07/2025) - EXEMPLO');
    console.log(relatorio);
    
    console.log('\n\n' + '='.repeat(60));
    console.log('üìä ESTE √â O NOVO RELAT√ìRIO EMPRESARIAL!');
    console.log('='.repeat(60));
    console.log('\n‚úÖ BENEF√çCIOS PARA O DONO DA EMPRESA:');
    console.log('‚Ä¢ üö® Identifica situa√ß√µes cr√≠ticas imediatamente');
    console.log('‚Ä¢ üí∞ Detecta oportunidades de neg√≥cio perdidas');
    console.log('‚Ä¢ üìà Mostra m√©tricas de performance da equipe');
    console.log('‚Ä¢ ‚è∞ Calcula tempo de resposta aos clientes');  
    console.log('‚Ä¢ üéØ Prioriza contatos que precisam de aten√ß√£o');
    console.log('‚Ä¢ üìä Categoriza temas empresariais automaticamente');
    console.log('‚Ä¢ üí° Fornece insights para tomada de decis√£o');
    
  } catch (error) {
    console.error('‚ùå Erro:', error.message);
  }
}

// Executa o exemplo
exemploRelatorio();
